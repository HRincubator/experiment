=============================================================================================================
メモ
=============================================================================================================

	GitHub コパイロット　拡張機能　ChatGPTの機能

下まで教材一覧をスクロールしたとき、追加ロードして教材一覧を追加表示←トランジション　読み込み制御

=============================================================================================================
データ管理
=============================================================================================================
ユーザーマスタ
	ユーザー情報、学習進捗、テスト成績、メッセージ、テスト回答、メモ欄
		一意のユーザーIDを持つ

ファイルサーバー
	履歴書、職務経歴書
		リネームする必要がある　プレフィックス en0001＿氏名_履歴書or職務経歴書,,,

教材
	動画教材
	テスト
	追加教材

=============================================================================================================
管理画面 ----- C：登録、R：照会、U：更新、D:物理削除（基本的になし）
=============================================================================================================

□ユーザー情報管理　新規1件　：S,R
□学習テスト情報管理	：S,R
□メッセージ対応　新着1件　：S,R,C,U
	ステータスを持つ、既読等
	検索、ステータスでフィルター
	メッセージ管理画面ではタブで、未読や返信済み等の切り替えをおこなえるようにする
□更新情報管理　：S,R,C,U
□テスト採点　新着1件　：S,R,C,U
	ステータスを持つ
	採点は点数化、コメント
	ステータスでフィルター

メッセージに送受信に必要なデータ情報：userID msgNO From/To Tree 属性 str
ゲストの送受信は必要ない：不具合報告はできるようにする←ステータスの制御でゲストは不具合報告ができるようにする
下書き有り
ゴミ箱に送られたメッセージは削除フラグがつき非表示
削除フラグは2つで本当の論理削除、ゴミ箱の削除フラグ
ゴミ箱の削除フラグは親Treeに付与される。親のみのフラグでTreeは検索できなくなる

ステータス：未送信（ユーザーのみ）、送信済み、未返信、返信済み、着信（ユーザーのみ）、下書き
	メッセージステータスはデータベースで管理

==================================================================
GoogleFonts
==================================================================
CDNのリンクをheadに読み込み
cssにimport
common cssにfont-famiryを適用

------------------------------------------------------------
Scss
------------------------------------------------------------
@mixin...例えばボタンアローをどのボタンでも同じ形で使いまわしたい場合に「@mixin クラス名」を付けて作成すると、
		使用したいクラスの中で「@include クラス名」で使い回せるようになる

_variables.scss...変数をまとめたファイル。変数を使用するには、使用したいファイルの先頭で「@import "variables";」でインポートして使用する。※インポートする際、「_」は必要ない

@media screen and (max-width: 768px) { }...スマホ表示UIサイズ

------------------------------------------------------------
メモ2
------------------------------------------------------------

動画教材コンテンツについて
LMS...e-ラーニング用のサービスで出来ている
出力
専用LMSだと文字起こし等がついている
MP4だと動画のみ
動画はSEのみ←全員
EEは入社する人のみ
テストはずべて自動採点
ツールLMSを並行して行う可能性もあるが、現状MP4でやる認識←LMSは確認する
ツールはeラボのPCを借りて使うことになる
動画はどこに保存してもよいAWSでもAzurでも

講義教材の各ページ名（ファイル名あり）
ファイル構成
章一覧ページ（何部の章一覧なのかを示す。chapterは各部に一つのみ）
02 / chapter
講義ページ(何部の教材の何章なのかを示す。lessonフォルダは一つのみで章が複数入る)
02 / lesson / 01( / learning)

-----------------------------------------------------
やること
-----------------------------------------------------

【追加機能・追加画面】
・【低】お知らせ更新情報機能の追加（トップ画面）
・トップ画面fv-mainのアイコン追加（詳しくは業務メモへ）
・部一覧画面：画面崩れ修正（コンテンツを中央に配置）
・章一覧：概要コンテンツ幅の調整（max-widthを縮小）


=============================================================================
開始・終了時確認事項
=============================================================================

□ 報告書の更新、開始・終了の報告

======================================================================
メモ3
======================================================================

8月から月次報告書を細分化
機能一覧と画面一覧

プレフィックス番号…001〜020
001 トップページみたいな感じ

機能一覧
大機能　：　中機能	：　小機能
周辺機能　：　ログイン機能：ログイン画面、パスワード再発行

周辺機能と本体サービスに分かれる

マルバツでも良いからどの画面で何が出来ているか
例：レスポンシブデザイン
トップ：o、ログイン：x、…
のようにする

画面マッピング：画面と機能を結びつけ、一覧表示

画面操作の統一性：ヘッダ、パンくず、フッタの画面ごと有無

10分経過時、自動でサーバにテストデータを送るのでも可

フッタ…特定商取引法は売買がないので必要ない