=============================================================================================================
【画面・機能】
=============================================================================================================
１．トップ
２．マイページ
３．登録
４．ログイン
５．動画教材トップ
６．動画視聴ページ
７．テストトップ
８．テストページ
９．パスワード再発行
１０．メッセージ一覧
１１．メッセージ本文
１２．成績ページ
１３．退会理由アンケートページ
１４．履歴書・職歴書ページ
１５．テスト解答確認ページ（JSで制御し、テストページから遷移はしない）※現段階ではJSでの制御はしないのでページを作成
１６．解答結果ページ（チューター依頼用と自動回答に分岐）

------------------------------
機能（画面以外のもの）
------------------------------

・モーダル
・ポップアップ
・ヘッダー
・フッター

------------------------------
必要段階
------------------------------
・構成作成、レスポンシブ対応、レビュー
・デザイン決定、デザイン修正
	font、デザインカラー、テキスト、画像、アイコン、ロゴ
・最終調整

=============================================================================================================
【仮完了画面】※レスポンシブ非対応、対応不十分なもの、css統一できていないもの、アドバイスがほしい等
=============================================================================================================


=============================================================================================================
【完了画面】※レビュー待ち画面。評価待ち、デザインの修正のみ等
=============================================================================================================

	・トップ
	・登録
	・ログイン
	・退会理由アンケートページ
	・メッセージ本文
	・メッセージ一覧
	・成績ページ ※微妙
	・マイページ ※微妙
	・テスト実施ページ
	・解答ページ
	・テストトップ
	・動画教材トップ
	・動画視聴ページ
	・パスワード再発行
	・履歴書・職務経歴書作成ページ　※現段階では画面反映なし

=============================================================================================================
【実装中画面】※進行中画面
=============================================================================================================
	

=============================================================================================================
【未完了画面】
=============================================================================================================
	

=============================================================================================================
【要修正画面】※優先して修正する必要のある画面。フレームワークを使用していない、機能が足りない等
=============================================================================================================


=============================================================================================================
bluma css 採用理由
=============================================================================================================
・公式ドキュメントがわかりやすい
・JSを必要としない←Vue、React、jQuery等、競合する心配がないため好きなJSを反映できる
・クラス名がわかりやすい
・実装が楽で見栄えが良い(デザインの癖が少ない)
・複数のSassで構成されている
・Scssが使用できる
・カスタマイズしやすい
・各種iconの埋め込み、大きさ調整に対応している。(FontAwesomeとの相性が良い)
・Vueのインストール時にBuefy(BlumaとVueを組み合わせて、動きのある機能を補完したもの)を選択できるので実装が楽

***** 注意点 *****
・クラス名が競合しやすい

***** 解決策 *****
　１．他のcssライブラリ、フレームワークを使用しない
　２．cssを自分で作成する際は、競合しやすい名前を確認しておく
　３．blumaクラスの中でしか使えないように書き換える※downloadした場合のみ有効

=============================================================================================================
メモ
=============================================================================================================

	□ ニュース一覧(現段階では実装しない)
		採用始めました、新しいレッスンを追加しました、サイトのバージョンアップしました等←企業についてのニュース、サイトについてのニュース
		トップにニュース一覧を追加（最新のニュース5つくらい表示）、詳細画面の追加が必要。すべてのニュース一覧が見られるニュース一覧画面
		とりあえずなし←後で消すでも良い

	□ Scss,CSSはファイルを分けるか、一緒にするか(現段階では、関係ない)
		ファイルを分ける場合
		・可読性が上がる
		・jsonファイルへの記述を1つずつする必要がある
		・少し重くなる可能性
		一緒にする場合
		・軽量化
		・jsonファイルを毎回記述する必要がなくなる


	学生と社会人の区分
	同時アクセス
	□ ブックマーク機能
	□ よくある質問→動画教材ページで質問をプルダウンで制御、FAQとしてトップに置き、ページ遷移の2パターン
	□ トップページのタイトル決め

	登録
		x氏名、電話番号は不要
		x性別はボタンではなくリスト
		xボタンの名前は新規登録ではなく登録、新規登録ボタンはトップ等から遷移してきているのでもう一度同じボタンが出るのは違和感

	テスト
		テストの難易度、所要時間の目安

	動画教材画面
		教材一覧トップがあり、進め方、単元一覧が表示されている
		単元一覧は「部」でまとめているので、部をクリックすると章一覧に行き、章ごとに視聴ページがあるのではないか

	成績画面
		お気に入り登録済み教材は成績画面のタブで表示
		部をクリックすると章の一覧（進捗率）がわかるようにする。ホバー
		章一覧と同じ構成で作成→左カラムに章とタイトル、右に公開、非公開のどちらかのタグ、再開ボタン、ボタン下部に進捗率

	トップ
		ヒーローテキスト
		黒背景を透過20％、白文字、後ろに画像　黒背景は少し文字より大きくとる
		影を一度試してみる
		サービスの次に更新情報

	ヘルプ
		ヘルプトップ（一覧）、ヘルプ内容画面に分かれる
		ヘルプ内容画面は、ヘルプの種類によって3桁目の番号を変える（例）101,102,201,202

	登録
		「トップへ」のボタンのみ

	マイページ
		学習ステータスの項目の文字の頭を揃える


	GitHub コパイロット　拡張機能　ChatGPTの機能
	
プログラミングサイト全てでGTMとGoogleAnalyticsを使用していた
noscriptでブラウザがJSをサポートしていない場合に代わりの非JSバージョンのものを埋め込める
headの最初にGTM
bodyの最初にGTM(noscript)

下まで教材一覧をスクロールしたとき、追加ロードして教材一覧を追加表示
QAの仕組みをどうするか
エラーページ必要なのでは？

お気に入り教材のデータはサーバー側で保存


=============================================================================================================
データ管理 R:照会
=============================================================================================================
ユーザーマスタ
	ユーザー情報、学習進捗、テスト成績、メッセージ、テスト回答、メモ欄
		一意のユーザーIDを持つ

ファイルサーバー
	履歴書、職務経歴書
		リネームする必要がある　プレフィックス en0001＿氏名_履歴書or職務経歴書,,,

教材
	動画教材
	テスト
	追加教材

=============================================================================================================
管理画面
=============================================================================================================

□ユーザー情報管理　新規1件　：S,R
□学習テスト情報管理	：S,R
□メッセージ対応　新着1件　：S,R,C,U
	ステータスを持つ、既読等
	検索、ステータスでフィルター
□更新情報管理　：S,R,C,U
□テスト採点　新着1件　：S,R,C,U
	ステータスを持つ
	採点は点数化、コメント
	ステータスでフィルター
	
基本的に削除はなし

項目の配置の順番も検討
アイコン、背景画像等のデザインはセンスで任せる

-----------------------------------------------------
やること
-----------------------------------------------------

お知らせ（プロモーションのようなもの）をメッセージに追加する
サイドバーで送信、星付き、受信、プロモーションを作成
トップページHEROテキストのデザイン修正
新規作成するメッセージでは、属性（質問、相談、不具合報告、その他）をプルダウンで選択させる

------------------------------------------------------------
メモ2
------------------------------------------------------------

メッセージに送受信に必要なデータ情報：userID msgNO From/To Tree 属性 str
ゲストの送受信は必要ない：不具合報告はできるようにする←ステータスの制御でゲストは不具合報告ができるようにする
下書き有り
ゴミ箱に送られたメッセージは削除フラグがつき非表示
削除フラグは2つで本当の論理削除、ゴミ箱の削除フラグ
ゴミ箱の削除フラグは親Treeに付与される。親のみのフラグでTreeは検索できなくなる
メッセージ本文の上部にアイコンボタンを配置し、スターを付けたり、ゴミ箱に送ったりする。JSの制御

ステータス：未送信（ユーザーのみ）、送信済み、未返信、返信済み、着信（ユーザーのみ）、下書き
	メッセージステータスはデータベースで管理