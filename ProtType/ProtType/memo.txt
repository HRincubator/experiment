=============================================================================================================
メモ
=============================================================================================================

	トップ
		ヒーローテキスト
		黒背景を透過20％、白文字、後ろに画像　黒背景は少し文字より大きくとる
		影を一度試してみる
		サービスの次に更新情報
		fv-mainはシャドウを2つかけることができないかも。理由：疑似要素のbeforは画像のぼかしに、afterは黒の背景に使用しているから。

	ヘルプ(優先度：低)
		ヘルプトップ（一覧）、ヘルプ内容画面に分かれる
		ヘルプ内容画面は、ヘルプの種類によって3桁目の番号を変える（例）101,102,201,202

	エラーページ（優先度：低）


	GitHub コパイロット　拡張機能　ChatGPTの機能
	
プログラミングサイト全てでGTMとGoogleAnalyticsを使用していた
noscriptでブラウザがJSをサポートしていない場合に代わりの非JSバージョンのものを埋め込める
headとbodyの最初にGTM(bodyは<noscript>タグで囲む)

下まで教材一覧をスクロールしたとき、追加ロードして教材一覧を追加表示←トランジション　読み込み制御

=============================================================================================================
データ管理
=============================================================================================================
ユーザーマスタ
	ユーザー情報、学習進捗、テスト成績、メッセージ、テスト回答、メモ欄
		一意のユーザーIDを持つ

ファイルサーバー
	履歴書、職務経歴書
		リネームする必要がある　プレフィックス en0001＿氏名_履歴書or職務経歴書,,,

教材
	動画教材
	テスト
	追加教材

=============================================================================================================
管理画面 ----- C：登録、R：照会、U：更新、D:物理削除（基本的になし）
=============================================================================================================

□ユーザー情報管理　新規1件　：S,R
□学習テスト情報管理	：S,R
□メッセージ対応　新着1件　：S,R,C,U
	ステータスを持つ、既読等
	検索、ステータスでフィルター
	メッセージ管理画面ではタブで、未読や返信済み等の切り替えをおこなえるようにする
□更新情報管理　：S,R,C,U
□テスト採点　新着1件　：S,R,C,U
	ステータスを持つ
	採点は点数化、コメント
	ステータスでフィルター
------------------------------------------------------------
メモ2
------------------------------------------------------------

メッセージに送受信に必要なデータ情報：userID msgNO From/To Tree 属性 str
ゲストの送受信は必要ない：不具合報告はできるようにする←ステータスの制御でゲストは不具合報告ができるようにする
下書き有り
ゴミ箱に送られたメッセージは削除フラグがつき非表示
削除フラグは2つで本当の論理削除、ゴミ箱の削除フラグ
ゴミ箱の削除フラグは親Treeに付与される。親のみのフラグでTreeは検索できなくなる

ステータス：未送信（ユーザーのみ）、送信済み、未返信、返信済み、着信（ユーザーのみ）、下書き
	メッセージステータスはデータベースで管理

管理者画面はコックピットのようにかっこよくするのも有り
グリットカラム形式
管理画面のダッシュボードでソートをできるようにするのか、任意のカラムのボタンから詳細一覧にいって、ソートや検索をかけて、照会するのか

==================================================================
FontAwesome - 検索ワード
==================================================================
・矢印アイコン:　chebron
・ゴミ箱: trash

-----------------------------------------------------
やること
-----------------------------------------------------

・業務ルールの作成...マニュアルのようなものを作成、ヘッダ部は管理シート同様のもの
・トップ画面を筆頭にテキストを考える、GPTに質問する
・デザイン（挿入画像の抽出）
デザイナーはHPをどうやって作成しているのか、Figma,Illustratorの使い方を学ぶ
Figmaでプロトタイプの作成ができる。Illustratorを使用してロゴの作成ができる

------------------------------------------------------------
メモ3
------------------------------------------------------------

今月から他のメンバーのプロジェクト参加するので下記項目の準備
業務ルールの作成…HRI業務としてEntrancePJに取り組む際の手続きや報告、働き方といったルール全般

	１．スケジューリング
		自分がどういう作業をしますの予定を立てるときにリーダーが当日に言われると対応できないのでこの日作業予定ですが大丈夫ですかの確認をしてほしい。
		大丈夫なら、作業開始の報告や報告書の更新等を当日行う。という流れになる。
	２．報告
		報告書を更新、作業開始します、何時までやります、業務を終了します、実績（どんな作業をしました）を報告して業務を終了する。
	３．勤務表
		月末にHRI作業時間として提出。月次報告書のHRI作業時間とHRI作業報告書の作業時間が一致していなければならない等
【前提】
・作業はリーダーと一緒
・残業・休出扱い
・作業用PCはPJで用意

============================================================================================================
	デザイン思考編
============================================================================================================

まず最初にどんなロゴにするかを決めるのですが、ロゴはコンセプト（概念・考え方）があってはじめて成立します。
コンセプトがなくてはデザインの道筋がなくどこにも進めないので、まずはこの「コンセプト」をしっかり決めましょう。

最低限以下の3つを決めるとロゴ制作の流れがスムーズです。
・どんなカテゴリの業種か？→IT
・ターゲットは誰か？→エンジニア未経験
・伝えたいメッセージは何か？→未経験からでもエンジニアになれる
ロゴはロゴ単体でその企業・サービス・商品を表すもの「誰が見てもわかりやすいもの」
配色で言えば若年層にはフレッシュな色が共感や安心感を得られます


==================================================================
GoogleFonts
==================================================================
CDNのリンクをheadに読み込み
cssにimport
common cssにfont-famiryを適用（*内に記載することで全体に適用可）



==================================================================
キャッチコピー
==================================================================
未経験でも大丈夫。エントランスが初心者に最適なIT学習環境を提供します。
未経験者のためのITエンジニア養成講座。エントランスがあなたの成長をサポート。
未経験のためのプログラミング講座サービス。あなたのIT挑戦を応援します。
未経験からエンジニアへの第一歩をサポート。エントランスで夢を実現しよう。
完全未経験からでもエンジニアに！エントランスがあなたのプログラミング学習をサポート。

トップ画面について
About部分は後ろのほうが良いのではないか。最初に来ると詳しい説明がある分、文字数が多いので見にくいのが、気になる。
最初に、「こんな人におすすめ」のようなセクションをつくってユーザーに共感してもらう。
興味を示した人は下にスクロールすると思うので、Aboutセクションで詳しいサービス情報を知れる。
新規登録ボタンに、矢印アイコンは必要か
FAQ よくある質問を追加するのか
Aboutを上下ずらす
